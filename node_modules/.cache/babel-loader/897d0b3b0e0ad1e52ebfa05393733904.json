{"ast":null,"code":"import{createStore,applyMiddleware,compose}from\"redux\";import{composeWithDevTools}from\"redux-devtools-extension\";import thunk from\"redux-thunk\";import{reduxFirestore,getFirestore}from\"redux-firestore\";import{getFirebase}from\"react-redux-firebase\";import rootReducer from\"./reducers/rootReducer\";import{firebaseConfig}from\"./firebase\";import firebase from\"./firebase\";var saveToLocalStorage=function saveToLocalStorage(state){var serialized=JSON.stringify(state);localStorage.setItem(\"state\",serialized);};var checkLocalStorage=function checkLocalStorage(){var serialized=localStorage.getItem(\"state\");if(serialized===null)return undefined;return{state:JSON.parse(serialized)};};export var store=createStore(rootReducer,checkLocalStorage(),composeWithDevTools(compose(applyMiddleware(thunk.withExtraArgument({getFirebase:getFirebase,getFirestore:getFirestore})),reduxFirestore(firebase,firebaseConfig))));store.subscribe(function(){return saveToLocalStorage(store.getState());});","map":{"version":3,"sources":["/Users/cameronking/Desktop/DappyWeb/src/store.js"],"names":["createStore","applyMiddleware","compose","composeWithDevTools","thunk","reduxFirestore","getFirestore","getFirebase","rootReducer","firebaseConfig","firebase","saveToLocalStorage","state","serialized","JSON","stringify","localStorage","setItem","checkLocalStorage","getItem","undefined","parse","store","withExtraArgument","subscribe","getState"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,OAAvC,KAAsD,OAAtD,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,cAAT,CAAyBC,YAAzB,KAA6C,iBAA7C,CACA,OAASC,WAAT,KAA4B,sBAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,OAASC,cAAT,KAA+B,YAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CACpC,GAAMC,CAAAA,UAAU,CAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAnB,CACAI,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BJ,UAA9B,EACD,CAHD,CAKA,GAAMK,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,GAAML,CAAAA,UAAU,CAAGG,YAAY,CAACG,OAAb,CAAqB,OAArB,CAAnB,CACA,GAAIN,UAAU,GAAK,IAAnB,CAAyB,MAAOO,CAAAA,SAAP,CACzB,MAAO,CACLR,KAAK,CAAEE,IAAI,CAACO,KAAL,CAAWR,UAAX,CADF,CAAP,CAGD,CAND,CAQA,MAAO,IAAMS,CAAAA,KAAK,CAAGtB,WAAW,CAC9BQ,WAD8B,CAE9BU,iBAAiB,EAFa,CAI9Bf,mBAAmB,CACjBD,OAAO,CACLD,eAAe,CAACG,KAAK,CAACmB,iBAAN,CAAwB,CAAEhB,WAAW,CAAXA,WAAF,CAAeD,YAAY,CAAZA,YAAf,CAAxB,CAAD,CADV,CAELD,cAAc,CAACK,QAAD,CAAWD,cAAX,CAFT,CADU,CAJW,CAAzB,CAYPa,KAAK,CAACE,SAAN,CAAgB,iBAAMb,CAAAA,kBAAkB,CAACW,KAAK,CAACG,QAAN,EAAD,CAAxB,EAAhB","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { getFirebase } from \"react-redux-firebase\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { firebaseConfig } from \"./firebase\";\nimport firebase from \"./firebase\";\n\nconst saveToLocalStorage = (state) => {\n  const serialized = JSON.stringify(state);\n  localStorage.setItem(\"state\", serialized);\n};\n\nconst checkLocalStorage = () => {\n  const serialized = localStorage.getItem(\"state\");\n  if (serialized === null) return undefined;\n  return {\n    state: JSON.parse(serialized)\n  };\n};\n\nexport const store = createStore(\n  rootReducer,\n  checkLocalStorage(),\n\n  composeWithDevTools(\n    compose(\n      applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n      reduxFirestore(firebase, firebaseConfig)\n    )\n  )\n);\n\nstore.subscribe(() => saveToLocalStorage(store.getState()));\n"]},"metadata":{},"sourceType":"module"}